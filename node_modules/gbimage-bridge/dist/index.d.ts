import { IBackgroundImageProps } from 'gatsby-background-image';
import { IGatsbyImageData } from 'gatsby-plugin-image/dist/src/components/gatsby-image.browser';
import { FunctionComponent } from 'react';
declare type IBaseBgImageProps = Omit<IBackgroundImageProps, 'fluid' | 'fixed'>;
export interface IBgImageProps extends IBaseBgImageProps {
    image?: IGatsbyImageData;
}
export interface IGatsbyImageDataExtended extends IGatsbyImageData {
    media?: string;
}
/**
 * Tests a given value on being a string.
 *
 * @param value *   Value to test
 * @return {boolean}
 */
export declare const isString: (value: string | IGatsbyImageDataExtended) => boolean;
/**
 * Returns the type of the imageData object.
 *
 * @param {IGatsbyImageData} imageData
 */
export declare const getBgImageType: (imageData: IGatsbyImageDataExtended) => string;
/**
 * Gives back the first image it finds.
 *
 * @param imageData
 */
export declare const getSingleImage: (imageData: (string | IGatsbyImageDataExtended)[]) => IGatsbyImageDataExtended | null;
/**
 * Converts the aspect ratio to width & height.
 *
 * @param {IGatsbyImageData} imageData
 */
export declare const getAspectRatio: (imageData: IGatsbyImageDataExtended) => number;
interface IPlaceholderData {
    base64?: string;
    tracedSVG?: string;
}
/**
 * Extracts the placeholder image (if any).
 *
 * @param {IGatsbyImageData} imageData
 */
export declare const getPlaceholder: (imageData: IGatsbyImageDataExtended) => IPlaceholderData;
/**
 * Extracts the extra src{Type} from sources srcSets.
 *
 * @param {object} sourceImage
 */
export declare const getSrc: (sourceImage: {
    srcSet: string;
    type: string;
    sizes: string;
}) => string;
/**
 * Loops through all sources & creates srcSet{Type} entries for `gbi`.
 *
 * @param imageData
 */
export declare const getAllExtraSrcSets: (imageData: IGatsbyImageDataExtended) => {};
/**
 *
 *
 * @param imageData
 */
export declare const convertSingleBgImage: (imageData: IGatsbyImageDataExtended) => Partial<IBackgroundImageProps | null>;
/**
 * Tries to Backport the new `gatsbyImageData` type to the classic `fluid` / `fixed` form.
 *
 * @param {object}    imageData    The image data to convert.
 * @returns {Partial<IBackgroundImageProps>|{}}
 */
export declare function convertToBgImage(imageData: undefined | IGatsbyImageDataExtended | (string | IGatsbyImageDataExtended)[]): Partial<IBackgroundImageProps | IBackgroundImageProps[] | null>;
/**
 * This is a temporary stopgap solution until `<BackgroundImage>` natively supports `gatsby-plugin-image`,
 * see [https://github.com/timhagn/gatsby-background-image/issues/141](https://github.com/timhagn/gatsby-background-image/issues/141).
 *
 * @param {React.PropsWithChildren<IBgImageProps>} props
 * @return {JSX.Element}
 * @constructor
 * @author @rburgst <https://github.com/rburgst> (of the original in the Issue)
 */
export declare const BgImage: FunctionComponent<IBgImageProps>;
export {};
